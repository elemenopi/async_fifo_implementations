LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY read_pointer_tb IS
END read_pointer_tb;

ARCHITECTURE behavior OF read_pointer_tb IS 

    -- Component Declaration for the Unit Under Test (UUT)
    COMPONENT read_pointer
    PORT(
         rptr : OUT  STD_LOGIC_VECTOR(4 downto 0);
         fifo_rd : OUT  STD_LOGIC;
         clk : IN  STD_LOGIC;
         rst_n : IN  STD_LOGIC;
         rd : IN  STD_LOGIC;
         fifo_empty : IN  STD_LOGIC
        );
    END COMPONENT;

   --Inputs
   signal clk : STD_LOGIC := '0';
   signal rst_n : STD_LOGIC := '0';
   signal rd : STD_LOGIC := '0';
   signal fifo_empty : STD_LOGIC := '0';

    --Outputs
   signal rptr : STD_LOGIC_VECTOR(4 downto 0);
   signal fifo_rd : STD_LOGIC;

    -- Clock period definitions
   constant clk_period : time := 10 ns;

BEGIN

    -- Instantiate the Unit Under Test (UUT)
   dut: read_pointer PORT MAP (
         rptr => rptr,
          fifo_rd => fifo_rd,
          clk => clk,
          rst_n => rst_n,
          rd => rd,
          fifo_empty => fifo_empty
        );


    -- Clock process to generate the clock
    clk_process: process
    begin
        for i in 1 to 10 loop  -- Simulate for 1000 clock cycles
            clk <= not clk;
            wait for clk_period / 2;
        end loop;
        wait;
    end process clk_process;

   -- Stimulus process
   stim_proc: process
   begin        
        -- Reset
        rst_n <= '0';
        wait for 20 ns;
        rst_n <= '1';

        -- Stimulate read process
        rd <= '1';
        wait for clk_period;
        rd <= '0';

        -- Stimulate fifo_empty condition
        fifo_empty <= '1';
        wait for clk_period;
        fifo_empty <= '0';

        -- Additional stimuli can be added here

        wait;
   end process;

END;
